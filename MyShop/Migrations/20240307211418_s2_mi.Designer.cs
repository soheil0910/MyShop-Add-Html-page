// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyShop.Data;

namespace MyShop.Migrations
{
    [DbContext(typeof(MyShopContext))]
    [Migration("20240307211418_s2_mi")]
    partial class s2_mi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyShop.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Creator",
                            Name = "soheil0910"
                        },
                        new
                        {
                            Id = 2,
                            Description = "G750",
                            Name = "mobile"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Honor 8",
                            Name = "mobile"
                        },
                        new
                        {
                            Id = 4,
                            Description = "فقط کدنویسی",
                            Name = "لب تاب"
                        },
                        new
                        {
                            Id = 5,
                            Description = "تعداد زیاد ",
                            Name = "شرکت ها"
                        },
                        new
                        {
                            Id = 6,
                            Description = "بیشتر سنعت های بروز جهان",
                            Name = "سنعت هایی که کار میکند"
                        });
                });

            modelBuilder.Entity("MyShop.Models.CategoryToProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryToProducts");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 1,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 1,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 1,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 1,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 5
                        });
                });

            modelBuilder.Entity("MyShop.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(10, 2)");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 214m,
                            QuantityInStock = 8
                        },
                        new
                        {
                            Id = 2,
                            Price = 250m,
                            QuantityInStock = 7
                        },
                        new
                        {
                            Id = 3,
                            Price = 2412m,
                            QuantityInStock = 6
                        },
                        new
                        {
                            Id = 4,
                            Price = 2500.02m,
                            QuantityInStock = 5
                        },
                        new
                        {
                            Id = 5,
                            Price = 3500m,
                            QuantityInStock = 4
                        },
                        new
                        {
                            Id = 6,
                            Price = 9800m,
                            QuantityInStock = 3
                        });
                });

            modelBuilder.Entity("MyShop.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "نصب و راه اندازی BootStrap4 رو پروژه فروشگاه",
                            ItemId = 1,
                            Name = "28"
                        },
                        new
                        {
                            Id = 2,
                            Description = "ساخت جداول فروشگاه با Code First - بخش دوم",
                            ItemId = 2,
                            Name = "32"
                        },
                        new
                        {
                            Id = 3,
                            Description = "معرفی Razor Pages و ساخت ادمین فروشگاه با Razor Pages",
                            ItemId = 3,
                            Name = "43"
                        },
                        new
                        {
                            Id = 4,
                            Description = "قوی ترین پردازنده جهان بسیار خنک با باتری اتمی و حافظه رم در حد کامپیوتر",
                            ItemId = 4,
                            Name = "گوشی"
                        },
                        new
                        {
                            Id = 5,
                            Description = "گوشی با چند سیستم امل و قابلیت نصب هر گونه رام و دوربین فوقولاده ",
                            ItemId = 5,
                            Name = "گوشی"
                        },
                        new
                        {
                            Id = 6,
                            Description = "نگران تمام شدن سوخت نباشید دارای برق شهری و ابشن های جلو تر از تکنولوژی",
                            ItemId = 6,
                            Name = "ماشین"
                        });
                });

            modelBuilder.Entity("MyShop.Models.CategoryToProduct", b =>
                {
                    b.HasOne("MyShop.Models.Category", "category")
                        .WithMany("categoryToProduct")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyShop.Models.Product", "product")
                        .WithMany("categoryToProduct")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyShop.Models.Product", b =>
                {
                    b.HasOne("MyShop.Models.Item", "Item")
                        .WithOne("Product")
                        .HasForeignKey("MyShop.Models.Product", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
